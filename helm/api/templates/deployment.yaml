apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api.fullname" . }}
  labels:
{{ include "api.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "api.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        timestamp: "{{ date "20060102150405" .Release.Time }}"
      labels:
        app.kubernetes.io/name: {{ include "api.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /api/status
#              port: 80
#            initialDelaySeconds: 30
#            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /api/status
              port: 80
            initialDelaySeconds: 8
            periodSeconds: 5
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgpassword
                  key: PGPASSWORD
            - name: DB
              value: postgres://{{ .Values.postgres.PGUSER }}:${PGPASSWORD}@{{ .Values.postgres.PGHOST }}/{{ .Values.postgres.PGDB }}
            - name: PORT
              value: "{{ .Values.service.port }}"
